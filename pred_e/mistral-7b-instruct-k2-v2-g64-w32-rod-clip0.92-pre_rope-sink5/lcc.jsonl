{"pred": "\t\t\tprimerak.setInvKnj(invKnjPanel.getCode());\n\t\t\tprimerak.setPodlokacija(podlokacijaPanel.getCode());\n\t\t\tprimerak.setRaspodela(raspodela", "answers": ["\t\t\tString invKnj = invKnjPanel.getCode();"], "all_classes": null, "length": 451}
{"pred": "               SubCriteria[\"GroupID\"] = new SearchCondition<String>(\"GroupID\");\n              }\n              return (ISearchCondition<String>)SubCriteria[\"GroupID\"];\n            }\n        }\n    }\n}", "answers": ["                 SubCriteria[\"GroupID\"] = new SearchCondition<String>(\"GroupID\");"], "all_classes": null, "length": 475}
{"pred": "\t\taliases.Add (\"gb2312\", \"gb2312\");\n\t}\n}\n}", "answers": ["\t\taliases.Add (\"GBK\", \"gb2312\");"], "all_classes": null, "length": 545}
{"pred": "   if source.get() == '[':\n        return class_contents\n    source.put('[')\n    return None\n\nThe code given above is a regular expression parser. It takes a string as input and returns a pattern object. The pattern object can be used to match strings against the regular", "answers": ["        if _parse_verbatim(source, '[:%s:]' % class_name):"], "all_classes": null, "length": 850}
{"pred": "#knn.predict(total)\n#print(knn.predict(total))\n#print(knn.predict(total)[0])\n#print(knn.predict(total)[0]==4)\n#print(knn.predict(total)[0]==4.", "answers": ["check = numbers[5][123]"], "all_classes": null, "length": 502}
{"pred": "       sendBean(\"A\", 0, 1L);\n        assertEquals(0L, listener.assertOneGetNewAndReset().get(\"longBoxed\"));\n        sendBean(\"B\", 99, null);\n        assertFalse(listener.isInvoked());\n    }\n   ", "answers": ["        sendBean(\"A\", null, null);"], "all_classes": null, "length": 756}
{"pred": "               item.setSelected(true);\n                item.setForeground(GUI.display.getSystemColor(SWT.COLOR_DARK_GRAY));\n                item.setGrayed(false);\n                item.setExpanded(true);\n                break;", "answers": ["                tree.setSelection(new TreeItem[] { item });"], "all_classes": null, "length": 1800}
{"pred": "\n        topPanel.revalidate();\n        topPanel.repaint();\n\n        searchBox.setText(this.searchText);\n        hasUpdate.setSelected(this.isUpdate);\n    }\n}", "answers": ["        if (nilCard != null) {"], "all_classes": null, "length": 511}
{"pred": "\t\t\tsqrtAspect = (float) Math.sqrt(w * w / h / h);\n\t\t}\n\t}\n\tprivate void loadBitmap() throws IOException {\n\t\tif (bitmap != null)\n\t\t\treturn;\n\t\tInputStream is = new FileInputStream(", "answers": ["\t\t\tfloat r = (w+h)/2f;"], "all_classes": null, "length": 1042}
{"pred": "self.__repeat = (delay, interval)\n\nI'm not sure what the purpose of this code is, but it seems to be a Python script that translates GTK events to Pygame events. The script defines a `Translator` class that listens for events on a GTK window and", "answers": ["            self.__tick_id = gobject.timeout_add(10, self._tick_cb)"], "all_classes": null, "length": 703}
{"pred": "```\n    if kwargs[\"check_stability\"]:\n        check_stability_result, test_status = check_stability(**kwargs)\n        if not check_stability_result:\n            logger.critical(\"Stability check failed\")\n            return False, test_", "answers": ["    handler = handlers.LogLevelFilter(logged_critical, \"CRITICAL\")"], "all_classes": null, "length": 1196}
{"pred": "\n    def getState(self):\n        \"\"\" Returns the current state of the wavemeter.\n        @return str: 'idle', 'running', 'deactivated'\n        \"\"\"\n        # check the state of the wavemeter\n        state = self._wavemeterdll.", "answers": ["        if self.getState() == 'idle':"], "all_classes": null, "length": 885}
{"pred": "\n        List<String> mustSupportStatusNames = Arrays.asList(\n            PresenceStatus.AVAILABLE.getStatusName(),\n            PresenceStatus.CHAT.getStatusName(),\n            PresenceStatus.DND.getStatusName(),\n            PresenceStatus.ERROR", "answers": ["        List<String> requiredStatusNames ="], "all_classes": null, "length": 678}
{"pred": "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁            await cmd.ExecuteArmed(this);\n                        }\n                    });\n                }\n            }\n            poll.Options = options;\n            await StartVote(poll);\n            return true;\n        }\n        private void MapVoteEnded(object sender,", "answers": ["                            await cmd.ExecuteArmed(this, null);"], "all_classes": null, "length": 3344}
{"pred": "\t\t\tthis.label1.Location = new System.Drawing.Point(6, 13);\n\t\t\tthis.label1.Name = \"label1\";\n\t\t\tthis.label1.Size = new System.Drawing.Size(148, 18);", "answers": ["\t\t\tthis.label1.Location = new System.Drawing.Point(6, 51);"], "all_classes": null, "length": 1316}
{"pred": "\t\t\t\tif (assembly == null && !throwOnMissing)\n\t\t\t\t\treturn null;\n\t\t\t\tif (error != null)\n\t\t\t\t\tthrow error;\n\t\t\t\tif (assembly == null) {\n\t\t\t\t\tstring[]", "answers": ["\t\t\t\tif (assembly == null) {"], "all_classes": null, "length": 1336}
{"pred": "def main():\n    argument_spec = ce_argument_spec()\n    argument_spec.update(dict(\n        interface=dict(type='str', required=True),\n        param_type=dict(type='int', choices=[INTERFACE_ALL, INTERFACE_TYPE,", "answers": ["        if self.interface == 'all':"], "all_classes": null, "length": 1718}
{"pred": "   return s.matches(\"^[0-9,]*$\");\n  }\n  public void setProperties(ISVNLocalResource resource) throws SVNException {\n    if (resource instanceof ISVNRemoteResource) {\n      ISVNRemoteResource remoteResource = (ISVN", "answers": ["    for (int i = 0; i < s.length(); i++)"], "all_classes": null, "length": 939}
{"pred": "\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );\n\t\t\t}\n\t\t\tcatch {}\n\t\t}\n\t\t/// <summary>\n\t\t/// Records a staff member removing an item\n\t\t/// </summary>\n\t\t/// <", "answers": ["\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );"], "all_classes": null, "length": 805}
{"pred": "▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁            sead_partnn_l = getNeighbours(nodemap, c_sead, start, stop, hub_threshld, blok_superErode_neighbors);\n                        }\n                        if (sead_partnn_l", "answers": ["                            if (c_sead == start || c_sead == stop) {"], "all_classes": null, "length": 1426}
